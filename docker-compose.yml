version: '3.8'
services:
  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./backend/certs:/etc/nginx/certs
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: web_informatica
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./backend
    depends_on:
      - redis
      - postgres
    ports:
      - "4000:4000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DB_USERNAME: postgres
      DB_PASSWORD: root
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: web_informatica
    env_file:
      - ./backend/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000/api" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_BACKEND_URL: https://localhost/api
    ports:
      - "3000:3000"
